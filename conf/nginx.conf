user nginx;
worker_processes auto;

pid /var/run/nginx.pid;
worker_rlimit_nofile 65535;

load_module "modules/ngx_http_brotli_filter_module.so";
load_module "modules/ngx_http_brotli_static_module.so";
load_module "modules/ngx_http_headers_more_filter_module.so";

events {
    use epoll;
    worker_connections 65535;
    multi_accept on;
}

http {
    charset utf-8;
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    server_tokens off;
    log_not_found off;
    types_hash_max_size 2048;
    client_max_body_size 16M;
    client_header_buffer_size 32k;
    client_body_buffer_size 64k;

    # MIME
    include mime.types;
    default_type application/octet-stream;

    # logging
    access_log off;
    error_log /var/log/nginx/error.log warn;
    
    include log.format.conf;

    # limits
    limit_req_log_level warn;
    limit_req_zone $binary_remote_addr zone=generalRateLimit:10m rate=80r/m;

    # SSL
    ssl_dhparam /etc/nginx/ssl/dhparam.pem;
    ssl_session_timeout 1d;
    ssl_session_cache builtin:1000 shared:SSL:10m;
    ssl_session_tickets off;

    # modern configuration
    ssl_protocols TLSv1.1 TLSv1.2 TLSv1.3;
    ssl_ciphers [TLS13+AESGCM+AES128|TLS13+AESGCM+AES256|TLS13+CHACHA20]:[EECDH+ECDSA+AESGCM+AES128|EECDH+ECDSA+CHACHA20]:EECDH+ECDSA+AESGCM+AES256:EECDH+ECDSA+AES128+SHA:EECDH+ECDSA+AES256+SHA:[EECDH+aRSA+AESGCM+AES128|EECDH+aRSA+CHACHA20]:EECDH+aRSA+AESGCM+AES256:EECDH+aRSA+AES128+SHA:EECDH+aRSA+AES256+SHA:RSA+AES128+SHA:RSA+AES256+SHA:RSA+3DES;
    ssl_ecdh_curve X25519:P-256:P-384;
    ssl_prefer_server_ciphers on;

    # OCSP Stapling
    ssl_stapling on;
    ssl_stapling_verify on;
    resolver 1.1.1.1 1.0.0.1 8.8.8.8 8.8.4.4 208.67.222.222 208.67.220.220 valid=60s;
    resolver_timeout 5s;

    server_names_hash_bucket_size 128;
    large_client_header_buffers 4 32k;
    keepalive_timeout 120;

    fastcgi_connect_timeout 300;
    fastcgi_send_timeout 300;
    fastcgi_read_timeout 300;
    fastcgi_buffer_size 64k;
    fastcgi_buffers 4 64k;
    fastcgi_busy_buffers_size 128k;
    fastcgi_temp_file_write_size 128k;

    fastcgi_hide_header X-Powered-By;
    proxy_hide_header X-Powered-By;
    more_clear_headers 'X-Powered-By';

    # brotli

    brotli on;
    brotli_comp_level 6;
    brotli_types
    text/xml application/xml application/atom+xml application/rss+xml application/xhtml+xml image/svg+xml
    text/javascript application/javascript application/x-javascript
    text/x-json application/json application/x-web-app-manifest+json
    text/css text/plain text/x-component
    font/opentype application/x-font-ttf application/vnd.ms-fontobject
    image/x-icon;

    #If you have a lot of static files to serve through Nginx then caching of the files' metadata (not the actual files' contents) can save some latency.
    open_file_cache max=1000 inactive=20s;
    open_file_cache_valid 30s;
    open_file_cache_min_uses 2;
    open_file_cache_errors on;

    server {
        listen 443 default_server;
        server_name _;
        ssl_stapling off;
        ssl_certificate /etc/nginx/ssl/invalid.crt;
        ssl_certificate_key /etc/nginx/ssl/invalid.key;
        ssl_trusted_certificate /etc/nginx/ssl/invalid.crt;
        access_log off;
        return 444;
    }

    server {
        listen 80 default_server;
        server_name _;
        access_log off;
        return 444;
    }

    include /data/conf/*.conf;
    include /data/conf/*/nginx.conf;
}
